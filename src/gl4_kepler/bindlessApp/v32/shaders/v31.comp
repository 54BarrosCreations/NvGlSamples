#version 450 core

#define SQRT_BUILDING_COUNT 200

#define TRANSFORM0		1

#define INPUT	0

precision highp float;
precision highp int;
layout(std140, column_major) uniform;
layout(std430, column_major) buffer;
layout (local_size_x = SQRT_BUILDING_COUNT, local_size_y = SQRT_BUILDING_COUNT) in;

struct PerMesh
{
    vec4 color;
    vec2 uv;
};

layout(binding = PER_MESH) buffer PerMeshBuffer
{
    PerMesh perMesh[];
} perMeshBuffer;

void main()
{	    
    PerMesh perMesh;

    float i = inMeshId / SQRT_BUILDING_COUNT;
    float j = inMeshId % SQRT_BUILDING_COUNT;

    float x = i / SQRT_BUILDING_COUNT - 0.5f;
    float z = j / SQRT_BUILDING_COUNT - 0.5f;

    float radius = sqrt(x * x + z * z);

    perMesh.color.r = sin(10.0f * radius + transform.time);
    perMesh.color.g = cos(10.0f * radius + transform.time);
    perMesh.color.b = radius;
    perMesh.color.a = 0.0f;
    perMesh.uv.x = j / SQRT_BUILDING_COUNT;
    perMesh.uv.y = 1 - i / SQRT_BUILDING_COUNT;

    return perMesh;
}